{"version":3,"sources":["Wrapper.js","App.js","index.js"],"names":["Wrapperstyle","styled","div","_templateObject","Object","taggedTemplateLiteral","Wrapper","props","str","_useState","useState","text","author","_useState2","slicedToArray","quote","setQuote","_useState3","_useState4","APIdata","setAPIdata","updateQuote","Math","floor","length","random","useEffect","axios","get","then","r","data","react_default","a","createElement","framer_motion","id","key","useId","initial","opacity","transition","type","duration","animate","exit","className","p","rel","target","href","concat","index_esm","undefined","tumblrIntentGenerator","onClick","AppComponent","App_templateObject","App","ReactDOM","createRoot","document","getElementById","render","src_App"],"mappings":"mOAUMA,EAAeC,IAAOC,IAAVC,MAAAC,OAAAC,EAAA,EAAAD,CAAA,0jDAHA,UACE,qBAgFL,SAASE,EAAQC,GAAO,IAYHC,EAZGC,EACTC,mBAAS,CAACC,KAAM,GAAIC,OAAQ,KADnBC,EAAAT,OAAAU,EAAA,EAAAV,CAAAK,EAAA,GAC5BM,EAD4BF,EAAA,GACrBG,EADqBH,EAAA,GAAAI,EAELP,mBAAS,CAAC,KAFLQ,EAAAd,OAAAU,EAAA,EAAAV,CAAAa,EAAA,GAE5BE,EAF4BD,EAAA,GAEnBE,EAFmBF,EAAA,GAQnC,SAAUG,IACNL,EAASG,EAAQG,KAAKC,MAAMJ,EAAQK,OAASF,KAAKG,YAetD,OApBAC,oBAAU,WAAOC,IAAMC,IAAI,+BAA+BC,KAAK,SAACC,GAAD,OAAOV,EAAWU,EAAEC,SAAS,IAC5FL,oBAAU,WAAOL,KAAgB,CAACF,IAoB1Ba,EAAAC,EAAAC,cAACC,EAAA,gBAAD,KACAH,EAAAC,EAAAC,cAAClC,EAAD,CAAcoC,GAAG,aACbJ,EAAAC,EAAAC,cAACC,EAAA,OAAOjC,IAAR,CAAYmC,IAAKC,kBAAUvB,EAAMH,OAC7B2B,QAAS,CAAEC,QAAS,GACpBC,WAAY,CAACC,KAAM,SAAUC,SAAU,GACvCC,QAAS,CAAEJ,QAAS,GACpBK,KAAM,CAACL,QAAS,GAChBM,UAAU,iBACVd,EAAAC,EAAAC,cAACC,EAAA,OAAOY,EAAR,CAAUX,GAAG,QAAQ,IAAMrB,EAAMJ,KAAO,KACxCqB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,KAAGE,GAAG,UAAN,IAAkC,OAAjBrB,EAAMH,OAAiB,UAAYG,EAAMH,UAGlEoB,EAAAC,EAAAC,cAAA,OAAKY,UAAU,wBACXd,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGc,IAAI,sBAAsBC,OAAO,SAASC,MA5B7B1C,EA4B0DO,EA3BjE,0DAAAoC,OAA6D3C,EAAIG,KAAjE,OAAAwC,OAA2F,OAAf3C,EAAII,OAAiB,UAAYJ,EAAII,SA2BxCwB,GAAG,eAAcJ,EAAAC,EAAAC,cAACkB,EAAA,EAAD,OACnGpB,EAAAC,EAAAC,cAAA,KAAGc,IAAI,sBAAsBC,OAAO,SAASC,KAxB7D,SAA+B1C,GAC3B,QAAY6C,IAAR7C,EAEA,MADqB,gFAAA2C,OAAmG,OAAf3C,EAAII,OAAiB,UAAYJ,EAAII,OAAzH,aAAAuC,OAA4I3C,EAAIG,KAAhJ,wFAsBsC2C,CAAsBvC,GAAQqB,GAAG,gBAAeJ,EAAAC,EAAAC,cAACkB,EAAA,EAAD,QAEnGpB,EAAAC,EAAAC,cAAA,UAAQqB,QAASlC,EAAae,GAAG,aAAjC,gBC9HpB,IAAMoB,EAAevD,IAAOC,IAAVuD,MAAArD,OAAAC,EAAA,EAAAD,CAAA,kOAmBHsD,MARf,WACE,OACE1B,EAAAC,EAAAC,cAACsB,EAAD,CAAcV,UAAU,OACxBd,EAAAC,EAAAC,cAAC5B,EAAD,QCdSqD,IAASC,WAAWC,SAASC,eAAe,SACpDC,OAED/B,EAAAC,EAAAC,cAAC8B,EAAD","file":"static/js/main.bbc650dd.chunk.js","sourcesContent":["import React, { useEffect, useState, useId } from 'react';\r\nimport styled from \"styled-components\"\r\nimport { ImTumblr, ImTwitter } from \"react-icons/im\";\r\nimport axios from 'axios';\r\nimport { motion, AnimatePresence } from 'framer-motion/dist/framer-motion'\r\n\r\n\r\nconst backColor = \"#ffffff\";\r\nconst buttonColor = \"#f9f21b\";\r\n\r\nconst Wrapperstyle = styled.div`\r\nposition: relative;\r\nwidth: 550px;\r\nbackground-color: ${backColor};\r\nborder-radius: 10px;\r\npadding: 15px;\r\nbox-sizing: border-box;\r\n\r\n.quote-wrapper{\r\n    width: 100%; \r\n    top: 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space-around;\r\n    box-sizing: border-box;\r\n    &>p{\r\n        transition-timing-function: ease-in;\r\n        transition-duration: 2s;\r\n        width: 80%;\r\n        text-align: center;\r\n        font-size: 40px;\r\n\r\n    }\r\n    &>div{\r\n        width: 100%;\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        margin-right: 20px;\r\n        p{\r\n            font-size: 20px;\r\n        }\r\n    }\r\n}\r\n.interactions-wrapper{\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    margin-top: 20px;\r\n    div{\r\n        width: 100px;\r\n        height: 40px;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        a{\r\n            width: 40px;\r\n            height: 40px;\r\n            background-color: ${buttonColor};\r\n            border-radius: 5px;\r\n            display: flex;\r\n            justify-content: center;\r\n            align-items: center;\r\n            *{\r\n                width: 23px;\r\n                height: 23px;\r\n                color: black;\r\n            }\r\n        }\r\n\r\n    }\r\n    button{\r\n        width: 175px;\r\n        height: 35px;\r\n        font-size: 18px;\r\n        background-color: ${buttonColor};\r\n        border: none;\r\n        border-radius: 5px;\r\n        font-weight: 600;\r\n        &:hover{\r\n            cursor: pointer;\r\n        }\r\n    }\r\n}\r\n`\r\n\r\n\r\n\r\nexport default function Wrapper(props) {\r\n    const [quote, setQuote] = useState({text: \"\", author: \"\"});\r\n    const [APIdata, setAPIdata] = useState([{}])\r\n\r\n    useEffect(() => {axios.get(\"https://type.fit/api/quotes\").then((r) => setAPIdata(r.data))}, []);\r\n    useEffect(() => {updateQuote()}, [APIdata]);\r\n\r\n\r\n    function  updateQuote(){\r\n        setQuote(APIdata[Math.floor(APIdata.length * Math.random())]);\r\n    }\r\n\r\n    function tweeterIntentGenerator(str){\r\n        const stringWebIntent = `https://twitter.com/intent/tweet?hashtags=quotes&text=\"${str.text}\" -${(str.author === null? \"Unknown\" : str.author)}`;\r\n        return stringWebIntent;\r\n\r\n    }\r\n    function tumblrIntentGenerator(str){\r\n        if (str !== undefined){\r\n            const stringWebIntent = `https://www.tumblr.com/widgets/share/tool?posttype=quote&tags=quotes&caption=${(str.author === null? \"Unknown\" : str.author)}&content=${str.text}&canonicalUrl=https%3A%2F%2Fwww.tumblr.com%2Fbuttons&shareSource=tumblr_share_button`\r\n            return stringWebIntent;\r\n        }\r\n    }\r\n\r\n    return(\r\n            <AnimatePresence>\r\n            <Wrapperstyle id=\"quote-box\">\r\n                <motion.div key={useId() + quote.author} \r\n                    initial={{ opacity: 0}}\r\n                    transition={{type: \"spring\", duration: 2}}\r\n                    animate={{ opacity: 1}} \r\n                    exit={{opacity: 0}}\r\n                    className='quote-wrapper'>\r\n                    <motion.p id='text'>{'\"' + quote.text + '\"'}</motion.p>\r\n                    <div>\r\n                        <p id='author'>-{quote.author === null? 'Unknown' : quote.author}</p>\r\n                    </div>\r\n                </motion.div>\r\n                <div className='interactions-wrapper'>\r\n                    <div>\r\n                    <a rel=\"noopener noreferrer\" target=\"_blank\" href={tweeterIntentGenerator(quote)} id=\"tweet-quote\"><ImTwitter /></a>\r\n                    <a rel=\"noopener noreferrer\" target=\"_blank\" href={tumblrIntentGenerator(quote)} id=\"tumblr-quote\"><ImTumblr /></a>\r\n                    </div>\r\n                    <button onClick={updateQuote} id='new-quote'>New quote</button>\r\n                </div>\r\n            </Wrapperstyle>\r\n            </AnimatePresence>\r\n    )\r\n};\r\n","import React from 'react';\nimport styled from \"styled-components\";\nimport Wrapper from './Wrapper'\n\n\nconst AppComponent = styled.div`\n  background-image: url(\"./assets/background.jpg\");\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nfunction App() {\n  return (\n    <AppComponent className=\"App\">\n    <Wrapper />\n    </AppComponent>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  //<React.StrictMode>\n    <App />\n  //</React.StrictMode>\n);\n"],"sourceRoot":""}